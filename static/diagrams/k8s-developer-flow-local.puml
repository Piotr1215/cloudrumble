@startuml k8s-developer-flow-local
'!theme bluegray
'!theme crt-amber
'!theme crt-green
'!theme plain

!theme vibrant

title "Typical development cycle on Kubernetes"

scale 1920x1080

skinparam defaultTextAlignment center
skinparam NoteTextAlignment left
skinparam SequenceGroupBodyBackgroundColor #dddddd

!include https://raw.githubusercontent.com/Piotr1215/dca-prep-kit/master/diagrams/MesloLGS.iuml

box "Local development"
actor "Developer" as dev
participant "IDE" as vscode
participant "Dockerfile" as file
participant "K8s yaml files" as k8sfiles
dev -> vscode : Let's develop some YAML!
vscode -> file: Develop and run tests on
vscode -> k8sfiles: Develop and run tests on
note right of vscode
    This requires local installation
    of Docker and Kubernetes
end note
end box

box "CI/CD system"
participant "Git repository" as repo
file -> repo : Push
CI <- repo : Trigger build
group Continous Integration
    CI -> CI: Source code scanning
    CI -> CI: Run automated tests
    CI -> CI: Build image
    CI -> CI: Image scannning
end
participant "CD" as CD
participant "Image registry" as registry
CI -> CD : Trigger deployment
CD -> registry: Push image

end box

box "Kubernetes Cluster"
participant "Deployment" as Medium
CD -> Medium: Trigger image update
note left of CD
    New image can be pushed to the cluster
    (imperative way)
    or it can be pulled by using GitOps
    (declarative way)
end note
Service <- Medium : Serve content
note right of Medium
    Deployment can be a web page  or
    an API, this can also be a
    aron job or other workload.
end note
Logs -> Logs: Observability
Rancher -> Rancher: Cluster management
note left of Rancher
    In this example cluster is managed with Rancher
    on prem or managed service (for example Azure AKS)
end note
...10 minutes later...
Service --> dev: Feedback from deployment
end box
@enduml