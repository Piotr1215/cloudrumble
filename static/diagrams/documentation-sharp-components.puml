@startuml documentation-sharp-components

!define LOGOS https://raw.githubusercontent.com/plantuml-stdlib/gilbarbara-plantuml-sprites/v1.0/sprites

'Icons
!include <kubernetes/k8s-sprites-labeled-25pct>
!include <aws/Compute/AmazonECS/ECScontainer/ECScontainer>
!include <tupadr3/font-awesome-5/user>
!include <material/file_document>
!include <material/all_inclusive>
!include <material/robot>
!include <material/account_switch>
!include <material/folder_move>
!include <material/git>
!include <material/google_chrome>
!include <material/file>
!include <material/server>
!include https://raw.githubusercontent.com/Piotr1215/sprites/master/language_markdown.puml
!include LOGOS/netlify.puml
!include LOGOS/azure.puml

'Styles
skinparam BackgroundColor white
skinparam componentShadowing true
skinparam rectangleRoundCorner 0
skinparam rectangleBorderStyle default
skinparam rectangleBackgroundColor white
skinparam componentBackgroundColor white
'skinparam linetype ortho
skinparam rectangleShadowing true
skinparam ActorBackgroundColor white
skinparam ParticipantBackgroundColor transparent
skinparam CollectionsBackgroundColor transparent
skinparam FrameBackgroundColor transparent
skinparam CollectionsBorderColor blue
skinparam ComponentBorderColor green
skinparam ArrowColor black
'skinparam monochrome false
!define TITLE Documentation Components

title TITLE

actor "Dev Team" as developer #green
actor "Other Stakeholders" as stakeholders #blue

rectangle "<$ma_git>\nProduct Document Repository" as doc {
    collections "<$ma_file>\nConfig files" as configs
    collections "<$l_language_markdown>\nMain Markdown Files" as md
    collections "<$l_language_markdown>\nMarkdown Files Rendered\nFrom Other Repositories" as md_other
}
package "Produt Software Repositories" as repos {
    component "<$ma_git>\nAPI" as api_doc {
        rectangle "README.md" as r1
    }
    component "<$ma_git>\nUI" as ui_doc {
        rectangle "README.md" as r2
    }
    component "<$ma_git>\nDatabase" as db_doc {
        rectangle "README.md" as r3
    }
}

package "CI/CD Pipeline" as pipeline {
    component "<$ma_server>\n Build Agent"
}

cloud "Providers & Tools" as providers {

    component "<$netlify>\nNetlify" as netlify
    component "<$azure>\nAzure" as azure
}


frame "<$ma_google_chrome> \n Browser" as browser

developer --> doc : Create & maintain
doc <-- repos : Source **README.md** files
doc --> pipeline : Build web page from markdown files
pipeline --> providers : Deploy
providers --> browser : Serve static content or server rendered
stakeholders -- browser : Consume documentaiton

legend left
        Software product can consist of multiple repositories
        for example in microservices architecture.
        Each repository has its own README.md file and set of diagrams
endlegend

@enduml