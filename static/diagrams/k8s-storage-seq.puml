@startuml k8s-storage-seq
'Icons
!include <kubernetes/k8s-sprites-labeled-25pct>
!include <aws/Compute/AmazonECS/ECScontainer/ECScontainer>
!include <tupadr3/font-awesome-5/user>
'Global Styles
'!include https://raw.githubusercontent.com/Piotr1215/dca-prep-kit/master/diagrams/styles.iuml
skinparam BackgroundColor white
skinparam componentShadowing true
skinparam rectangleRoundCorner 0
skinparam rectangleBorderStyle default
skinparam rectangleBackgroundColor white
skinparam componentBackgroundColor white
skinparam linetype poly
skinparam rectangleShadowing true
skinparam ActorBackgroundColor white
skinparam ParticipantBackgroundColor transparent
skinparam CollectionsBackgroundColor transparent
skinparam ArrowColor black
'skinparam monochrome false
!define TITLE Kubernetes PV and PVC Lifecycle

title TITLE

actor "Admin" as admin #green
participant "<$pv>\nPersistent Volume" as pv

==Provisioning==
admin -> pv : Creates
activate pv #lightgray
note left of pv : Backed by phisical storage
actor "Developer" as dev #gray
participant "<$pvc>\nPersistent Volume Claim" as pvc
dev -> pvc : Creates
activate pvc #lightgray
participant "<$pod>\nPod" as pod
dev -> pod : Mounts PVC to pod
activate pod #lightgray
==Binding==
pv <- pvc : Claims
pvc -> pvc : Checks pv availability

==Using==
pvc -> pod : Mounted to
pvc -> pvc : Set to bound
collections "<$ECScontainer>\nContainers" as containers
pod <- containers : Use mounted\nvolumes

==Reclaiming==
dev -> pvc:  Deletes PVC
destroy pvc
group Reclaiming Policies
    else Retain

    pv --> pv : PV Remains available

    else Recycle
    note right
        Warning: The Recycle reclaim policy is deprecated.
        Instead, the recommended approach
        is to use dynamic provisioning.
    end note

    pv --> pv: PV Data is scrubbed, but \nremains available

    else Delete
    pv -[#red]-> pv : PV is automatically removed\ndata lost
    destroy pv
end

legend left
TITLE
|= Component |= Definition |
|     <$pod> | **Pod** is the smallest deployable units of\n computing that you can create and manage in Kubernetes. |
|     <$pv> | **Persistent Volume** is a cluster resource providing storage to pods,\n but exisitng independently of pod lifecycle. |
|     <$pvc> | **Persistent Volume Claim** is a request for storage,\n consumes persistent volumes. |
|      <$ECScontainer> | **Container** is a lightway and portable executable image\n that contains software and all of its dependencies. |
endlegend

@enduml